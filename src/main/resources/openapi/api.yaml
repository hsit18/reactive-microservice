openapi: 3.0.3
x-explorer-enabled: false
x-samples-languages: ['curl', 'node', 'java', 'javascript', 'python', 'go']
info:
  title: Swagger API
  description: |
    Swagger API sample description.

  version: '1.0'
  contact:
    name: Avaya API Team
    url: https://developers.avayacloud.com/onecloud-ccaas
    email: apiteam@avaya.com
  license:
    name: Avaya Software Development Kit (SDK) Software License Terms
    url: http://support.avaya.com/css/P8/documents/101038288
servers:
  - url: '{protocol}://{server}:{port}'
    description: Internal API
    variables:
      protocol:
        default: 'https'
      server:
        default: 'contact-service'
      basePath:
        default: '/api/outreach/contact'
security:
  - {}
  - BearerAuth: []
tags:
  - name: Pets
    description: |
      pets data API
paths:
  "/v1/pets":
    get:
      tags:
        - Pets
      summary: Pets Summary
      description: |
        You can use this API to get the latest import details for the  contact list.
        
        **This API require the Account Administrator role.**
      operationId: getLatestJobForContactList
      parameters:
        - $ref: '#/components/parameters/petId'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetDTO'
              examples:
                default:
                  $ref: '#/components/examples/contact-list-job-details-response'
        "400":
          description: |
            Bad Request.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              examples:
                default:
                  $ref: '#/components/examples/error-constraint-violation'
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServer"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
      deprecated: false
components:
  parameters:
    petId:
      name: petId
      description: "This requires for pet."
      in: path
      required: true
      schema:
        type: string
        example: 123
  examples:
    test-data-source-connection:
      value:
        dataSourceId: "c98d0f28-d83b-46cb-b111-c7006282fc52"
        name: "testDataSource"
        description: "datasource description"
        dataSourceType: "SFTP"
        properties:
          ftpIPHostName: "250.063.252.203"
          ftpUserName: "username"
          ftpPassword: "password"
          ftpRemoteFilePath: "/prod/ftp/files/contacts.csv"
          fieldDelimiter: ","
    error-constraint-violation:
      description: Constraint Violation
      value:
        type: "https://developers.avayacloud.com/onecloud-ccaas/docs/error-handling#constraint-violation"
        title: "Constraint Violation"
        status: 400
        detail: "A problem that indicates a syntactically correct, yet semantically illegal request. The Server can not process this request until the client resolves the semantic errors described in the violations section."
        violations:
          - field: accountId
            message: "must match \"^[a-zA-Z]{6}$\""
            code: 20006
    error-unauthorized:
      description: Unauthorized
      value:
        type: "https://developers.avayacloud.com/onecloud-ccaas/docs/error-handling#unauthorized"
        title: "Unauthorized"
        status: 401
        detail: "This operation requires authentication. See https://developers.avayacloud.com/onecloud-ccaas/docs/how-to-authenticate-with-ccaas-apis"
    error-forbidden:
      description: Forbidden
      value:
        type: "https://developers.avayacloud.com/onecloud-ccaas/docs/error-handling#forbidden"
        title: "Forbidden"
        status: 403
        detail: "According to the access control policy the current user and/or accountId does not have permission to access this resource."
    error-not-found:
      description: Not Found
      value:
        type: "https://developers.avayacloud.com/onecloud-ccaas/docs/error-handling#resource-not-found"
        title: "Resource Not Found"
        status: 404
        detail: "Resource not found."
    error-internal-server-error:
      description: Server Error
      value:
        type: "https://developers.avayacloud.com/onecloud-ccaas/docs/error-handling#server-error"
        title: "Server Error"
        status: 500
        detail: "An internal server error was encountered."
    error-service-unavailable:
      description: Service Unavailable
      value:
        type: "https://developers.avayacloud.com/onecloud-ccaas/docs/error-handling#server-error"
        title: "Service Unavailable"
        status: 503
        detail: "Invoked service is unavailable."
    import-detail-response:
      description: import detail response
      value:
        contactListName: "contactlist1"
        dataSourceName: "testdatasource"
        jobId: "sdfsdfe-db44-47c3-a21b-eba8ed8sdfsdf"
        contactId: "sdf-db44-47dfc3-fdf-ebasdfd"
        recordLine: "recordLine"
        recordType: "ERROR"
        reason: "reason"
        createdOn: "2024-01-08T06:37:14.599Z"
    contact-list-job-details-response:
      value:
        jobId: "3ea9b2d7-0faf-46bb-8762-32de8bcf1c6b"
        successCount: 100
        failedCount: 10
        deletedCount: 10
        status: "In Progress"
        createdOn: "2022-10-21T10:34:34.7192561Z"
        finishedOn: "2022-10-21T10:34:34.7192561Z"
        reason: "reason message"
    contact-list-status-response:
      value:
        jobId: "3ea9b2d7-0faf-46bb-8762-32de8bcf1c6b"
        inProgress: true
        reason: "reason message"
  schemas:
    PetDTO:
      type: object
      properties:
        totalRecords:
          type: number
          description: This represents the total number of records in the response.
          default: 0
          example: 2
        result:
          type: array
          description: This represents a list of the requested resource.
          items:
            $ref: '#/components/schemas/PetDTO'
    Problem:
      type: object
      description: |
        <b>Problem Detail</b> as a way to carry machine-readable details of errors in a HTTP response to avoid the need to define new error response formats for HTTP APIs <a href="https://tools.ietf.org/html/rfc7807">RFC 7807</a>
      properties:
        type:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the problem type. When dereferenced, it SHOULD provide human-readable documentation for the problem type (e.g., using HTML).
          default: 'about:blank'
          example: 'https://developers.avayacloud.com/onecloud-ccaas/docs/error-handling#constraint-violation'
        title:
          type: string
          description: |
            A short, summary of the problem type. Written in english and readable for engineers (usually not suited for non technical stakeholders and not localized).
          example: Service Unavailable
          nullable: true
        status:
          type: integer
          format: int32
          description: |
            The HTTP status code generated by the origin server for this occurrence of the problem.
          minimum: 100
          maximum: 600
          example: 503
          nullable: true
        detail:
          type: string
          description: |
            A human readable explanation specific to this occurrence of the problem.
          example: Connection to database timed out
          nullable: true
        instance:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.
          nullable: true
        violations:
          type: array
          description: |
            A list of violations that occurred as a result of invalid data provided as part of a request.
          nullable: true
          items:
            type: object
            properties:
              field:
                type: string
                description: |
                  The name of the field in the request that caused the violation. This can be the name of a path parameter, query parameter, or a field within the request body.
                example: accountId
              message:
                type: string
                description: |
                  A human readable explanation specific to this occurrence of the violation.
                example: "must match \"^[a-zA-Z]{6}$\""
              code:
                type: integer
                format: int32
                description: |
                  The violation code generated by the server for this occurrence of the violation. Use this code when implementing any error handling logic instead of the message, as the message can change.
                example: 20006
          example:
            - field: emailAddress
              message: "must not be null"
              code: 20002
            - field: accountId
              message: "must match \"^[a-zA-Z]{6}$\""
              code: 20006
  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          examples:
            default:
              $ref: '#/components/examples/error-unauthorized'
    InternalServer:
      description: Internal Server Error
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          examples:
            default:
              $ref: '#/components/examples/error-internal-server-error'
    Forbidden:
      description: Forbidden
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          examples:
            default:
              $ref: '#/components/examples/error-forbidden'
    NotFound:
      description: Not Found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          examples:
            default:
              $ref: '#/components/examples/error-not-found'
    ServiceUnavailable:
      description: Service unavailable
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          examples:
            default:
              $ref: '#/components/examples/error-service-unavailable'
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT